FROM python:3.10-slim

WORKDIR /app

# Installer cron, grep, etc.
RUN apt-get update && apt-get install -y \
    cron \
    grep \
    procps \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Installer les dÃ©pendances Python
COPY requirements.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copier tout le contenu du projet
COPY . .

# Donner les bons droits aux scripts initdb
RUN chmod +x /app/initdb/02_create_roles.sh
RUN chmod +x /app/initdb/04_set_encryption_key.sh


# ðŸ‘‰ Copier 04_set_encryption_key.sh au bon endroit pour PostgreSQL
COPY initdb/04_set_encryption_key.sh /docker-entrypoint-initdb.d/
RUN chmod +x /docker-entrypoint-initdb.d/04_set_encryption_key.sh

# ðŸ‘‰ Ajouter les triggers dâ€™encryption auto
COPY initdb/01_prepare_encryption_key.sql /docker-entrypoint-initdb.d/
COPY initdb/05_create_encryption_triggers.sql /docker-entrypoint-initdb.d/

# Donner les droits d'exÃ©cution aux scripts de dÃ©marrage
RUN chmod +x /app/wait-for-postgres.sh
RUN chmod +x /app/entrypoint.sh

# CrÃ©er le fichier de log pour cron
RUN touch /var/log/cron.log

# Charger le crontab
RUN crontab /app/crontab.txt

# Lancer le script Python aprÃ¨s que PostgreSQL soit prÃªt, puis dÃ©marrer cron
ENTRYPOINT ["/app/entrypoint.sh"]
