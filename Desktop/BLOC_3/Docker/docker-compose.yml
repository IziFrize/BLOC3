version: "3.9"

services:
  smartretail_app:
    build: .
    container_name: smartretail_app
    volumes:
      - .:/app
    ports:
      - "8000:8000"   
    depends_on:
      - smartretail_db
    environment:
      - POSTGRES_DB=smartretail
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=smartretail_db
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    restart: unless-stopped

  smartretail_db:
    image: postgres:15
    container_name: smartretail_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      APP_USER: ${APP_USER}
      APP_PASSWORD: ${APP_PASSWORD}
      ANALYST_USER: ${ANALYST_USER}
      ANALYST_PASSWORD: ${ANALYST_PASSWORD}
      WRITER_USER: ${WRITER_USER}
      WRITER_PASSWORD: ${WRITER_PASSWORD}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
    volumes:
      - smartretail_pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  smartretail_grafana:
    image: grafana/grafana:latest
    container_name: smartretail_grafana
    ports:
      - "3000:3000"
    depends_on:
      - smartretail_db
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards    
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  
      
  smartretail_prometheus:
    image: prom/prometheus:latest
    container_name: smartretail_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - smartretail_app
    restart: unless-stopped

  smartretail_nodeexporter:
    image: prom/node-exporter:latest
    container_name: smartretail_nodeexporter
    ports:
      - "9100:9100"
    restart: unless-stopped

volumes:
  smartretail_pgdata:
